|modulator
dacval[0] <= iqmod:myiq.port0
dacval[1] <= iqmod:myiq.port0
dacval[2] <= iqmod:myiq.port0
dacval[3] <= iqmod:myiq.port0
dacval[4] <= iqmod:myiq.port0
dacval[5] <= iqmod:myiq.port0
dacval[6] <= iqmod:myiq.port0
dacval[7] <= iqmod:myiq.port0
dacval[8] <= iqmod:myiq.port0
dacval[9] <= iqmod:myiq.port0
locked <= thepll:mypll.port4
clk => clk.IN1
reset_ => reset_.IN1


|modulator|iqmod:myiq
dacval[0] <= dacval[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dacval[1] <= dacval[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dacval[2] <= dacval[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dacval[3] <= dacval[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dacval[4] <= dacval[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dacval[5] <= dacval[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dacval[6] <= dacval[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dacval[7] <= dacval[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dacval[8] <= dacval[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dacval[9] <= dacval[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i[0] => Mult0.IN32
i[1] => Mult0.IN31
i[2] => Mult0.IN30
i[3] => Mult0.IN29
i[4] => Mult0.IN28
i[5] => Mult0.IN27
i[6] => Mult0.IN26
i[7] => Mult0.IN25
q[0] => Mult1.IN32
q[1] => Mult1.IN31
q[2] => Mult1.IN30
q[3] => Mult1.IN29
q[4] => Mult1.IN28
q[5] => Mult1.IN27
q[6] => Mult1.IN26
q[7] => Mult1.IN25
clk => tpos[0].CLK
clk => tpos[1].CLK
clk => tpos[2].CLK
clk => tpos[3].CLK
clk => tpos[4].CLK
clk => tpos[5].CLK
clk => tpos[6].CLK
clk => tpos[7].CLK
clk => dacval[0]~reg0.CLK
clk => dacval[1]~reg0.CLK
clk => dacval[2]~reg0.CLK
clk => dacval[3]~reg0.CLK
clk => dacval[4]~reg0.CLK
clk => dacval[5]~reg0.CLK
clk => dacval[6]~reg0.CLK
clk => dacval[7]~reg0.CLK
clk => dacval[8]~reg0.CLK
clk => dacval[9]~reg0.CLK
reset_ => tpos.OUTPUTSELECT
reset_ => tpos.OUTPUTSELECT
reset_ => tpos.OUTPUTSELECT
reset_ => tpos.OUTPUTSELECT
reset_ => tpos.OUTPUTSELECT
reset_ => tpos.OUTPUTSELECT
reset_ => tpos.OUTPUTSELECT
reset_ => tpos.OUTPUTSELECT
reset_ => dacval[9]~reg0.ENA
reset_ => dacval[8]~reg0.ENA
reset_ => dacval[7]~reg0.ENA
reset_ => dacval[6]~reg0.ENA
reset_ => dacval[5]~reg0.ENA
reset_ => dacval[4]~reg0.ENA
reset_ => dacval[3]~reg0.ENA
reset_ => dacval[2]~reg0.ENA
reset_ => dacval[1]~reg0.ENA
reset_ => dacval[0]~reg0.ENA


|modulator|iqmod:myiq|sincos:the_sincos
sin[0] <= sin_lut.DATAOUT
sin[1] <= sin_lut.DATAOUT1
sin[2] <= sin_lut.DATAOUT2
sin[3] <= sin_lut.DATAOUT3
sin[4] <= sin_lut.DATAOUT4
sin[5] <= sin_lut.DATAOUT5
sin[6] <= sin_lut.DATAOUT6
sin[7] <= sin_lut.DATAOUT7
cos[0] <= cos_lut.DATAOUT
cos[1] <= cos_lut.DATAOUT1
cos[2] <= cos_lut.DATAOUT2
cos[3] <= cos_lut.DATAOUT3
cos[4] <= cos_lut.DATAOUT4
cos[5] <= cos_lut.DATAOUT5
cos[6] <= cos_lut.DATAOUT6
cos[7] <= cos_lut.DATAOUT7
sval[0] => sin_lut.RADDR
sval[1] => sin_lut.RADDR1
sval[2] => sin_lut.RADDR2
sval[3] => sin_lut.RADDR3
sval[4] => sin_lut.RADDR4
sval[5] => sin_lut.RADDR5
sval[6] => sin_lut.RADDR6
sval[7] => sin_lut.RADDR7
cval[0] => cos_lut.RADDR
cval[1] => cos_lut.RADDR1
cval[2] => cos_lut.RADDR2
cval[3] => cos_lut.RADDR3
cval[4] => cos_lut.RADDR4
cval[5] => cos_lut.RADDR5
cval[6] => cos_lut.RADDR6
cval[7] => cos_lut.RADDR7


|modulator|thepll:mypll
areset => areset.IN1
inclk0 => sub_wire4[0].IN1
pllena => pllena.IN1
c0 <= altpll:altpll_component.clk
locked <= altpll:altpll_component.locked


|modulator|thepll:mypll|altpll:altpll_component
inclk[0] => pll.CLK
inclk[1] => ~NO_FANOUT~
fbin => ~NO_FANOUT~
pllena => pll.ENABLE
clkswitch => ~NO_FANOUT~
areset => pll.ARESET
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= <GND>
clk[2] <= <GND>
clk[3] <= <GND>
clk[4] <= <GND>
clk[5] <= <GND>
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= pll.LOCKED
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= sclkout1.DB_MAX_OUTPUT_PORT_TYPE
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


